1
00:00:02,693 --> 00:00:05,576
Hello, so this video is 
an introductory video,

2
00:00:05,576 --> 00:00:06,714
this is a beginner video,

3
00:00:06,714 --> 00:00:11,074
for those of you who haven't learned
anything about programming before.

4
00:00:11,074 --> 00:00:13,867
We're going to look at p5.js,

5
00:00:13,867 --> 00:00:19,064
I've discussed what p5.js is 
in the previous video.

6
00:00:19,064 --> 00:00:24,125
In this video, the only topic here,
and this is hopefully a pretty easy one,

7
00:00:24,125 --> 00:00:27,645
is coordinate system and shapes.

8
00:00:27,645 --> 00:00:28,416
What does that mean?

9
00:00:28,416 --> 00:00:32,313
So one of the first things
that I would like to show you

10
00:00:32,313 --> 00:00:35,752
in learning to program 
is drawing.

11
00:00:35,752 --> 00:00:38,481
So there is a lot more to 
programming than drawing,

12
00:00:38,481 --> 00:00:41,012
in fact this is a tiny piece!

13
00:00:41,012 --> 00:00:45,667
If what you're interested in
is programming games

14
00:00:45,667 --> 00:00:49,165
or animations are lot of 
that is graphics and drawings.

15
00:00:49,165 --> 00:00:51,603
But in things of what you can do 
on the web, having different things

16
00:00:51,603 --> 00:00:53,512
talk to each other, interacting
with the user,

17
00:00:53,512 --> 00:00:57,772
analyzing data, all sorts of tools

18
00:00:57,772 --> 00:01:02,364
to do good in the world, there's
lots more that you can

19
00:01:02,364 --> 00:01:03,394
do besides drawing.

20
00:01:03,394 --> 00:01:05,303
But drawing is a nice place to start!

21
00:01:05,303 --> 00:01:07,954
It's not for everybody, 
but if you are a visual designer,

22
00:01:07,954 --> 00:01:10,552
or like to draw or like
to do things visually

23
00:01:10,552 --> 00:01:13,676
it can be a useful, easy way
to start learning

24
00:01:13,676 --> 00:01:15,290
the basics of programming.

25
00:01:15,290 --> 00:01:20,976
So hopefully later I'm gonna do a lot more
videos that just look at the text,

26
00:01:20,976 --> 00:01:23,966
the data, that have a little
bit less to do with drawing,

27
00:01:23,966 --> 00:01:25,434
for those of you who 
might be interested in that.

28
00:01:25,434 --> 00:01:27,174
Ok, so in order to draw,

29
00:01:28,204 --> 00:01:30,465
we need a canvas.

30
00:01:33,765 --> 00:01:35,313
So this is the canvas.

31
00:01:35,313 --> 00:01:37,312
Now if I want to draw something
on the canvas,

32
00:01:37,312 --> 00:01:40,226
that canvas on this board, 
I will take this pen

33
00:01:40,226 --> 00:01:43,258
and I will just do this ...
there, I drew something!

34
00:01:43,258 --> 00:01:49,560
Now, programming is the act of
giving instructions to

35
00:01:49,560 --> 00:01:51,684
the computer to follow.

36
00:01:51,684 --> 00:01:54,622
So whereas I just kinda 
did some sort of mojo

37
00:01:54,622 --> 00:01:56,352
in the moment thing with
my mind to draw

38
00:01:56,352 --> 00:01:58,975
that rectangle, if we, you want

39
00:01:58,975 --> 00:02:02,684
that rectangle to appear on the screen,
you need to write the instructions for that.

40
00:02:02,684 --> 00:02:06,797
So, the instruction that you need to learn
to give it as a command

41
00:02:06,797 --> 00:02:09,265
really what it is, is a function.

42
00:02:09,265 --> 00:02:12,112
I can't say the word 'function' enough

43
00:02:12,112 --> 00:02:15,224
because function, this idea of
a function is completely

44
00:02:15,224 --> 00:02:17,872
fundamental to the way 
everything works in Javascript!

45
00:02:17,872 --> 00:02:21,162
So this is kind of our first view
of a function,

46
00:02:21,162 --> 00:02:22,433
there is a function called 'rect()'

47
00:02:22,433 --> 00:02:25,055
So if we think of this as a command
you say: rect!

48
00:02:25,055 --> 00:02:27,483
the rectangle would appear
there in the window/canvas!

49
00:02:27,483 --> 00:02:30,454
However it will not because
I need to say where

50
00:02:30,454 --> 00:02:32,275
it should go and 
how big it should be.

51
00:02:32,275 --> 00:02:35,212
So how do we tell the computer

52
00:02:35,212 --> 00:02:38,066
how to draw that rectangle?

53
00:02:38,066 --> 00:02:41,355
So the way that happens
is through the use

54
00:02:41,355 --> 00:02:43,085
of something called 'arguments'.

55
00:02:44,125 --> 00:02:46,784
So when I issue this command: rect()!,

56
00:02:46,784 --> 00:02:48,315
draw a rectangle!,

57
00:02:49,255 --> 00:02:55,167
I also have to specify 
some arguments,

58
00:02:55,167 --> 00:02:57,375
and the arguments to that rectangle,

59
00:02:57,375 --> 00:03:00,166
they come in the form of numbers,

60
00:03:00,956 --> 00:03:03,303
and are separated by commas,

61
00:03:03,303 --> 00:03:05,013
and enclosed in parentheses,

62
00:03:05,013 --> 00:03:07,637
with the line being ended by a semicolon.

63
00:03:07,637 --> 00:03:10,833
So this is a moment, 
that we just have to admit something

64
00:03:10,833 --> 00:03:14,125
to ourselves, which is that 
syntax is a thing that you have

65
00:03:14,125 --> 00:03:15,655
to deal with in programming.

66
00:03:15,655 --> 00:03:19,002
So with the human language
that we speak to each other,

67
00:03:19,002 --> 00:03:20,492
in my case it is English,

68
00:03:20,492 --> 00:03:23,645
and some broken, bad versions
of some other languages,

69
00:03:23,645 --> 00:03:28,146
we can say things very informally:
'draw a rectangle!',

70
00:03:28,146 --> 00:03:29,437
'would you please draw a rectangle?',

71
00:03:29,437 --> 00:03:34,741
'kindly, my friend over there, 
would you make a rectangle

72
00:03:34,741 --> 00:03:37,512
happen on the screen 
by moving your pen around?',

73
00:03:37,512 --> 00:03:39,333
there are all sorts of different ways
we can say that.

74
00:03:39,333 --> 00:03:43,334
But here I have to say 
it in a very specific way.

75
00:03:43,334 --> 00:03:46,956
If I'm missing a comma, or parentheses,
it is not going to work!

76
00:03:46,956 --> 00:03:48,395
We'll get an error message,

77
00:03:48,395 --> 00:03:52,456
I'll show you what happens
when you get that error message

78
00:03:52,456 --> 00:03:53,216
and how to fix it,

79
00:03:53,216 --> 00:03:56,581
but this is something that is important,
that you're gonna have to start

80
00:03:56,581 --> 00:03:59,323
getting comfortable with, 
I don't know if I'm ever

81
00:03:59,323 --> 00:04:01,761
getting comfortable with it, 
but it's something that exists!

82
00:04:01,761 --> 00:04:06,812
So that's the syntax.
What goes in these blank spots?

83
00:04:06,812 --> 00:04:09,934
So here are the things that go there:

84
00:04:09,934 --> 00:04:15,572
an x-location, a y-location, 
a width and a height.

85
00:04:15,572 --> 00:04:18,842
So this brings up a key point!

86
00:04:18,842 --> 00:04:22,780
What do I mean by that? 
x-location, y-location?

87
00:04:22,780 --> 00:04:24,883
For some of you that might
be the most obvious thing,

88
00:04:24,883 --> 00:04:27,704
especially if you have done
stuff with computer graphics before,

89
00:04:27,704 --> 00:04:29,995
but for some of you 
it might be quite new.

90
00:04:29,995 --> 00:04:33,143
So what I would like to do,
very briefly, is take a look

91
00:04:33,143 --> 00:04:34,673
at a different context.

92
00:04:34,673 --> 00:04:40,224
This sort of middle school, 
high school geometry class context.

93
00:04:40,224 --> 00:04:45,786
So this is a graph, 
of a Cartesian plane,

94
00:04:45,786 --> 00:04:49,015
named for RenÃ© Descartes,
the mathematician.

95
00:04:49,015 --> 00:04:51,545
This is what's known as the x-axis,

96
00:04:51,545 --> 00:04:53,774
this is what's known as the y-axis.

97
00:04:53,774 --> 00:04:57,744
And if I've got a point over here
I could describe that point

98
00:04:57,744 --> 00:05:00,335
in terms of an x and a y.

99
00:05:00,335 --> 00:05:02,504
What is that point's x and y?

100
00:05:02,504 --> 00:05:06,504
Well, I can tell you that the center
right here is the point 0,0.

101
00:05:06,504 --> 00:05:08,354
That gives us a clue!

102
00:05:08,354 --> 00:05:11,401
The x-axis moves this way positively

103
00:05:11,401 --> 00:05:13,024
and this way negatively.

104
00:05:13,024 --> 00:05:16,377
So, 1, 2, 3 ...

105
00:05:16,377 --> 00:05:19,983
so the x-location of this 
point here is the number 3.

106
00:05:19,983 --> 00:05:25,723
And now we can say: 1, 2, 3, 4 ...
y moves upwards positively

107
00:05:25,723 --> 00:05:28,136
the y-location of that point is 4.

108
00:05:28,136 --> 00:05:32,105
so this point has an x-value of 3,
a y-value of 4.

109
00:05:32,105 --> 00:05:34,396
Now let's get this canvas again.

110
00:05:34,396 --> 00:05:38,248
This is our canvas, 
the thing we're going to drawn on,

111
00:05:38,248 --> 00:05:46,687
[ramble]

112
00:05:46,687 --> 00:05:49,441
This canvas .. How does this map
to this canvas?

113
00:05:49,441 --> 00:05:52,095
Well, the thing is computer graphics
doesn't work this way.

114
00:05:52,095 --> 00:05:55,763
There is a similar idea, 
there's an x-axis and a y-axis,

115
00:05:55,763 --> 00:06:00,116
but 0,0 - at least for what we're
doing right now, this will change later -

116
00:06:00,116 --> 00:06:01,732
is not in the center!

117
00:06:01,732 --> 00:06:06,936
The top lefthand corner
of our graphics window, our canvas,

118
00:06:06,936 --> 00:06:10,282
is defined as 0,0 ...

119
00:06:10,282 --> 00:06:13,252
and x moves positively in this direction,

120
00:06:13,252 --> 00:06:17,981
y moves positively in this direction.

121
00:06:17,981 --> 00:06:20,604
So this is the x-axis

122
00:06:20,604 --> 00:06:22,405
and this is the y-axis.

123
00:06:22,405 --> 00:06:25,480
Now, the other thing that's 
sort of key here is

124
00:06:25,480 --> 00:06:29,195
I use these small numbers, zoomed in,
kinda counting,

125
00:06:29,195 --> 00:06:33,716
that's kind of not relevant for
the creative programming things

126
00:06:33,716 --> 00:06:36,154
that I'm gonna show you
on this canvas here.

127
00:06:36,154 --> 00:06:41,822
Because typically speaking I'm gonna say:
open a canvas that has a width

128
00:06:41,822 --> 00:06:46,001
of 640 and maybe a height of 360.

129
00:06:46,001 --> 00:06:49,447
So we're going to open a large window
with a lot of pixels, millions of pixels!

130
00:06:49,447 --> 00:06:54,342
We could just kind of guesstimate
here for now, but if I said:

131
00:06:54,342 --> 00:06:55,842
Oh, an x-value of 100,

132
00:06:55,842 --> 00:06:57,311
where's 100 gonna be?

133
00:06:57,311 --> 00:07:03,965
I don't know ... maybe over here somewhere

134
00:07:03,965 --> 00:07:06,256
Maybe I say a y-location of 200,

135
00:07:06,256 --> 00:07:08,423
it's like down here somewhere.

136
00:07:08,423 --> 00:07:12,633
If I say width of 75 and a height of 150,

137
00:07:12,633 --> 00:07:14,862
I end up seeing a rectangle like this.

138
00:07:14,862 --> 00:07:17,453
But not drawn to scale ...

139
00:07:17,453 --> 00:07:20,393
So the reason why I am doing this
in a totally messy 'I am getting it

140
00:07:20,393 --> 00:07:23,717
all wrong' kind of way, is I think
it's a nice way to figure this out,

141
00:07:23,717 --> 00:07:25,245
just through trial and error.

142
00:07:25,245 --> 00:07:29,623
the key is the syntax, 
I need to know: what is my function name?

143
00:07:29,623 --> 00:07:31,505
What is the command I am issuing?

144
00:07:31,505 --> 00:07:32,622
Rectangle, rect(),

145
00:07:32,622 --> 00:07:34,715
What are the arguments it expects?

146
00:07:34,715 --> 00:07:37,537
An x-location, a y-location,
a width and a height.

147
00:07:37,537 --> 00:07:40,537
Formulate the syntax, 
and get it in the window!

148
00:07:44,237 --> 00:07:47,674
Now look at this, let's actually
just make that happen ...

149
00:07:47,674 --> 00:07:53,403
So I'm gonna say:
my canvas is 640 by 360,

150
00:07:53,403 --> 00:07:56,372
you can see I specified there
the size of the canvas,

151
00:07:56,372 --> 00:07:59,433
and now the rectangle is ...
I said something like

152
00:07:59,433 --> 00:08:11,892
100, 200, and then 75, 150 ...

153
00:08:11,892 --> 00:08:14,714
So you can see now I entered those in,
as the arguments,

154
00:08:14,714 --> 00:08:17,152
rect, 100, 200, 75, 150

155
00:08:17,152 --> 00:08:21,474
So now, moment of truth, 
let's hit this button up here,

156
00:08:21,474 --> 00:08:24,795
this button, by the way,
this green button right here

157
00:08:24,795 --> 00:08:27,401
this is what it's known
as the 'play button',

158
00:08:27,401 --> 00:08:30,493
it's kind of an absurd thing, 
to have a play button,

159
00:08:30,493 --> 00:08:33,171
like we're playing our code,
really what we're doing is executing

160
00:08:33,171 --> 00:08:37,086
an application, we're launching
the software we've written here,

161
00:08:37,086 --> 00:08:39,221
this exciting piece of software 
that makes a canvas

162
00:08:39,221 --> 00:08:41,345
and draws a rectangle, 
but it's nice to have

163
00:08:41,345 --> 00:08:44,285
this model of thinking 
of it as a media player.

164
00:08:44,285 --> 00:08:47,087
So the next thing I'm gonna do 
is I'm gonna press this button

165
00:08:47,087 --> 00:08:49,161
and we're gonna see ...
here we go.

166
00:08:49,161 --> 00:08:52,877
So you can see now that this
is what the canvas actually looks like.

167
00:08:52,877 --> 00:08:58,108
It is 640 pixels wide, 
it's 360 pixels high,

168
00:08:58,108 --> 00:09:01,365
and the rectangle is 
at 100 on the x-axis,

169
00:09:01,365 --> 00:09:05,033
and 200 pixels down, 75 across,
and 150 down.

170
00:09:05,033 --> 00:09:07,125
So you can see how that works.

171
00:09:07,125 --> 00:09:12,835
You can see here that I, this was kind of
incorrect, my guesstimation,

172
00:09:12,835 --> 00:09:17,242
but over here now, I can say:
ah, that's not really what I wanted.

173
00:09:17,242 --> 00:09:17,866
I didn't want the rectangle

174
00:09:17,866 --> 00:09:18,533
to go so far to the bottom,

175
00:09:18,533 --> 00:09:23,385
so I'm gonna change it from
150 to 125, and let's stop,

176
00:09:23,385 --> 00:09:24,824
and then play it again,

177
00:09:24,824 --> 00:09:26,113
and you can see, there it is!

178
00:09:26,113 --> 00:09:27,855
There's my rectangle at a different location.

179
00:09:27,855 --> 00:09:31,437
So this is actually kind of it, 
for this first stage!

180
00:09:32,147 --> 00:09:35,961
But there's a couple of more pieces here
...

181
00:09:39,931 --> 00:09:44,304
One is, there are more shapes
in life than a rectangle!

182
00:09:47,324 --> 00:09:51,864
Some that you might look at, 
just now, if you're beginning to learn, are:

183
00:09:51,864 --> 00:09:58,303
'ellipse' (a way of drawing a circle but you can
also draw this or this),

184
00:09:58,303 --> 00:10:00,186
you might look at 'line',

185
00:10:00,186 --> 00:10:04,240
you might look at 'arc' 
(that's kind of a tricky one),

186
00:10:04,240 --> 00:10:07,562
ah, these are pretty good, 
you might look at 'point'.

187
00:10:07,562 --> 00:10:09,719
There are a whole bunch of these,

188
00:10:09,719 --> 00:10:15,353
and they all expect some 
amount of arguments,

189
00:10:15,353 --> 00:10:20,644
and you could guess, 
well, a rectangle needed an

190
00:10:20,644 --> 00:10:23,114
x, y, and a width and a height, 
maybe an ellipse also needs

191
00:10:23,114 --> 00:10:24,582
x, y, and a width and a height?

192
00:10:24,582 --> 00:10:27,312
And to draw a line,
well, what could a line mean?

193
00:10:27,312 --> 00:10:33,205
ok, well, a line is a thing ...
a line, a bunch of pixels

194
00:10:33,205 --> 00:10:34,434
that connect two points.

195
00:10:34,434 --> 00:10:36,312
How could I say: draw a line?

196
00:10:36,312 --> 00:10:40,757
Oh, what if I give the x, y of one point
and the x,y of another point?

197
00:10:40,757 --> 00:10:42,756
That would tell you how to draw a line.

198
00:10:42,756 --> 00:10:44,016
So you could guess all this

199
00:10:44,016 --> 00:10:47,882
but the point of doing this 
is not to guess or memorize,

200
00:10:47,882 --> 00:10:51,123
there is a reference
that will list you, what are all

201
00:10:51,123 --> 00:10:54,038
the possible functions and 
what are the arguments they expect?

202
00:10:54,038 --> 00:10:57,536
So if I come over here, the thing
that I would like to show you,

203
00:10:57,536 --> 00:10:59,704
is I'm going to go now to

204
00:10:59,704 --> 00:11:06,235
the p5.js website and this is kind 
of where you should start,

205
00:11:06,235 --> 00:11:07,786
oh, look at that beautiful animation,

206
00:11:07,786 --> 00:11:11,101
you should start by looking at, 
well, there are a lot of places

207
00:11:11,101 --> 00:11:13,786
you could start, you might need to 
download the editor,

208
00:11:13,786 --> 00:11:16,923
which I think I showed in the previous 
video ... maybe I didn't ... ?

209
00:11:16,923 --> 00:11:22,035
There are some tutorials here, 
there's more under 'Learn' and 'Start'

210
00:11:22,035 --> 00:11:24,275
but what I want to look at 
right now is 'Reference'.

211
00:11:24,275 --> 00:11:26,836
So I'm gonna click 'Reference' and ...

212
00:11:26,836 --> 00:11:31,295
I would like to look at is ...

213
00:11:31,295 --> 00:11:32,004
'shape'!

214
00:11:32,004 --> 00:11:36,401
So I think this is a good place
for you to start.

215
00:11:36,401 --> 00:11:37,671
If you're looking for an assignment

216
00:11:37,671 --> 00:11:39,692
or an exercise to do at the end of this video:

217
00:11:39,692 --> 00:11:43,932
look at all these functions, 
arc, ellipse, line, point, quad, rect, triangle

218
00:11:43,932 --> 00:11:46,555
and this is in fact what I love 
about working in Javascript

219
00:11:46,555 --> 00:11:48,253
let's look at the line function

220
00:11:48,253 --> 00:11:53,136
you can see here: look, that's it,
this is an example for how you draw a line,

221
00:11:53,136 --> 00:11:55,723
but I can just play around 
with this right here ...

222
00:11:55,723 --> 00:11:58,835
and see does that change it?

223
00:11:58,835 --> 00:12:03,805
So you can see here, but this is what
it's important, this is what matters to you:

224
00:12:03,805 --> 00:12:09,325
this is the syntax: 'line' expects
4 arguments, you can call them parameters,

225
00:12:13,375 --> 00:12:16,201
x1, y1, x2, y2.

226
00:12:16,201 --> 00:12:19,522
That's connecting, a line is
connecting 2 points.

227
00:12:19,522 --> 00:12:22,263
The parameters are here, 
here they are defined.

228
00:12:22,263 --> 00:12:23,584
So this is what you have to get
used to doing:

229
00:12:23,584 --> 00:12:28,406
you see the basics, I can open up
a project in the editor,

230
00:12:28,406 --> 00:12:31,012
I can type code in there, 
I know I need to know about syntax,

231
00:12:31,012 --> 00:12:33,012
now I have a sense of the coordinate system,

232
00:12:33,012 --> 00:12:35,697
but you need to get used to all 
these different shapes.

233
00:12:35,697 --> 00:12:38,186
What are the shapes that you can draw?

234
00:12:38,186 --> 00:12:40,895
And how do you do that?

235
00:12:40,895 --> 00:12:43,771
So what I would say, on your own,
I can get through all of these,

236
00:12:43,771 --> 00:12:45,833
but I think it's much more useful 
to do it on your own,

237
00:12:45,833 --> 00:12:50,125
to try all these, to play with them
even just in the p5.js website itself.

238
00:12:50,125 --> 00:12:55,447
There is a last piece, before I end this video, 
that I want to talk about,

239
00:12:55,447 --> 00:12:57,322
and we need to come back here.

240
00:12:57,322 --> 00:13:01,552
I kind of just glossed over this
'createCanvas' thing

241
00:13:01,552 --> 00:13:04,552
and I also really haven't mentioned
what is this function setup()

242
00:13:04,552 --> 00:13:05,737
and this function draw()?

243
00:13:05,737 --> 00:13:10,384
So these are gonna become
much more clear in the future times,

244
00:13:10,384 --> 00:13:12,736
in the next, in a future video

245
00:13:12,736 --> 00:13:15,281
we'll spend a lot of time looking
at setup() and draw(),

246
00:13:15,281 --> 00:13:19,665
but the deal is, 
I said that functions are

247
00:13:19,665 --> 00:13:23,362
absolutely fundamental to
the way that Javascript works!

248
00:13:23,362 --> 00:13:25,633
Everything boils down to a function.

249
00:13:25,633 --> 00:13:32,446
And the first functions that you
are going to learn to write ...

250
00:13:36,864 --> 00:13:38,036
... looks like this.

251
00:13:41,076 --> 00:13:44,536
So your code has to live somewhere.

252
00:13:44,536 --> 00:13:50,372
It has to live ultimately, there is more
to it than this, now let's think

253
00:13:50,372 --> 00:13:55,588
of this statement: 'your code 
has to live inside a function!'

254
00:13:55,588 --> 00:14:00,341
Right now there are only 2 places, 
2 functions to put your code ...

255
00:14:00,341 --> 00:14:02,841
there is the setup() function
and the draw() function.

256
00:14:02,841 --> 00:14:05,934
The setup() function, which you say:
function setup()

257
00:14:05,934 --> 00:14:07,402
and we're gonna get to what
these parentheses are,

258
00:14:07,402 --> 00:14:09,861
the curly brackets define 
the beginning and the end

259
00:14:09,861 --> 00:14:11,453
of that function.

260
00:14:11,453 --> 00:14:14,923
The setup() function is where you 
do the things you do right when

261
00:14:14,923 --> 00:14:15,891
the programs starts!

262
00:14:15,891 --> 00:14:22,163
Like: 'createCanvas(__)'

263
00:14:22,163 --> 00:14:26,923
To setup your canvas,
to setup your p5 sketch,

264
00:14:26,923 --> 00:14:29,361
you need to create a canvas
in the setup() function.

265
00:14:29,361 --> 00:14:31,275
Then you want to draw stuff
to that canvas.

266
00:14:31,275 --> 00:14:32,984
Where do you all your drawing stuff?

267
00:14:32,984 --> 00:14:34,392
Inside this drawing function!

268
00:14:34,392 --> 00:14:37,868
So there is more to it, 
we're gonna need to make things animate,

269
00:14:37,868 --> 00:14:40,077
we're gonna need to do something 
when someone clicks the mouse,

270
00:14:40,077 --> 00:14:42,621
and how we handle different events,

271
00:14:42,621 --> 00:14:44,305
and how the program flows over time.

272
00:14:44,305 --> 00:14:48,004
I'll get into this more and more
in a future video.

273
00:14:48,004 --> 00:14:51,003
And we can look back here and see:
there it is!

274
00:14:51,003 --> 00:14:52,764
setup() has a createCanvas()

275
00:14:52,764 --> 00:14:53,857
and draw() has rect().

276
00:14:53,857 --> 00:14:59,121
Try to make a design of
something interesting for yourself,

277
00:14:59,121 --> 00:15:02,555
and hopefully this video 
was somewhat useful.

278
00:15:02,555 --> 00:15:04,345
Ok, I'm gonna stop now!

279
00:15:04,345 --> 00:15:11,002
[ramble]
